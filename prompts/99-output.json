{
  "tool": "gpt",
  "parseOutput": true,
  "promptSystem": "You're a senior technical writer at a software company, specializing in static analysis tools.",
  "promptHuman": "Your task is to write some documentation on this pattern. This will be used as-is in the app UI as in-app documentation. Be mindful of that and adopt a professional, friendly tone. Don't mention the name of the pattern in the description, as it will be already visible in the UI.\n\nProvide: \n1) An updated, descriptive, short *title* \n2) A brief *summary* of about 10 words for display in a list in the UI \n3) A thorough yet concise *description* of the pattern's meaning and suggested action, all in about 50 words \n4) If appropriate, append a short code *example*, describing the issue and solution, inferring the language from context, such as the tool name. \n\nIMPORTANT - Output format: `<title>Updated title</title><summary>Brief summary.</summary><description>More thorough description.</description><example>```lang\n// Example source code.```</example>`\n\nOutput examples: `<title>DocBlock Alignment and Formatting</title><summary>Ensure consistent alignment of docblocks for readability.</summary><description>Standardize the alignment of PHPDoc blocks in your code to enhance readability and maintainability. Ensure annotations align vertically and descriptions are properly indented.</description><example>```php\n/**\n * Calculate sum of two numbers.\n *\n * @param int $a First number.\n * @param int $b Second number.\n * @return int Sum of numbers.\n */\nfunction sum($a, $b) &#x7B;\n    return $a + $b;\n&#x7D;\n```</example>`, `<title>Enforcing Return Type Hints in CakePHP Classes</title><summary>Ensure methods in CakePHP classes have return type hints.</summary><description>Verify all methods in CakePHP classes include return type hints to improve type safety and code quality. For instance, update methods like this:</description><example>```php\n// Issue: Missing return type hint\npublic function getUserName() &#x7B; \n    return $this->name; \n&#x7D;\n// Solution: Added return type hint\npublic function getUserName(): string &#x7B; \n    return $this->name; \n&#x7D;\n```</example>`"
}
